<Row>:
  size_hint_y: None
  height: label.texture_size[1]
  Label:
    id: label
    text: root.lable_text
    font_size: root.fs
    text_size: self.width, None
    size_hint: (1, None)
    size: self.parent.width, self.texture_size[1]
    max_lines:1
    shorten: True
    shorten_from: 'left'
    color: 1, 1, 1, .5
    halign: 'right'
    valign: 'center'

<CustomDropDown>:
  max_height: 30
  Button:
    text: root.acts[0]
    size_hint_y: None
    height: root.max_height//3
    background_color: .14,.14,.17, 1
    font_size: self.height
    on_release:
      root.data = self.text
      root.select(self.text)
  Button:
    text: root.acts[1]
    size_hint_y: None
    height: root.max_height//3
    background_color: .14,.14,.17, 1
    font_size: self.height
    on_release:
      root.data = self.text
      root.select(self.text)
  Button:
    text: root.acts[2]
    size_hint_y: None
    height: root.max_height//3
    background_color: .14,.14,.17, 1
    font_size: self.height
    on_release:
      root.data = self.text
      root.select(self.text)

<Elliptic>:
  orientation: 'vertical'
  action: action
  dropdown: dropdown
  input1: input1
  input2: input2
  result_input: result_input
  curve_data:curve_data

  CustomDropDown:
    id: dropdown
    on_select: root.on_dropdown_select(self)

  BoxLayout:
    size_hint_y: .05

  AnchorLayout:
    size_hint_y: .1
    anchor_x: 'center'
    anchor_y: 'center'
    BoxLayout:
      size_hint_x: .8
      spacing: self.width//200
      padding: [self.width//200,self.height//15]
      Label:
        size_hint_x: .1
        text:'E'
        text_size: self.width, self.height
        font_size: self.height
        halign: 'right'
        valign: 'bottom'
      CustomTextInput:
        id:curve_data
        text: 'p(a,b)'
        on_focus: root.curve_data_focus(self)
        foreground_color: 0,0,0,.5
        multiline: False
        font_size: self.height//1.75

  BoxLayout:
    size_hint_y: .1

  AnchorLayout:
    size_hint_y: .3
    anchor_x: 'center'
    anchor_y: 'center'
    BoxLayout:
      size_hint_x: .9
      orientation: 'vertical'
      spacing: self.height//50
      BoxLayout:
        BoxLayout:
          orientation: 'vertical'
          spacing: 1
          CustomTextInput:
            id: input1
            text: 'x,y'
            on_focus: root.input1_focus(self)
            foreground_color: 0,0,0,.5
            multiline: False
            text_size: self.width, self.height
            font_size: self.height//2
          CustomTextInput:
            id: input2
            text: 'x,y'
            on_focus: root.input2_focus(self)
            multiline: False
            foreground_color: 0,0,0,.5
            text_size: self.width, self.height
            font_size: self.height//2
          CustomTextInput:
            id: result_input
            text: 'Результат'
            foreground_color: 0,0,0,.5
            multiline: False
            readonly: True
            text_size: self.width, self.height
            font_size: self.height//2
        BoxLayout:
          size_hint_x: .3
          orientation: 'vertical'
          spacing: 1
          padding:1,1
          Button:
            text: '+'
            id: action
            background_color: .14,.14,.17, 1
            font_size: self.height//2
            on_release:
              setattr(root.dropdown,'max_height',self.height//0.7)
              root.dropdown.open(self)
          Button:
            text: '='
            on_press: root.result()
            background_color: 1, 0.2, 0.1, .9

  BoxLayout:
    size_hint_y: .45

<Usual>:
  canvas.before:
    Color:
      rgba: .1,.1,.13, 1
    Rectangle:
      pos: self.pos
      size: self.size
  orientation: 'vertical'
  story:story
  entry: entry

  BoxLayout:
    orientation: 'vertical'
    size_hint: 1, 0.28
    padding: [self.width//50,self.height//50]
    spacing: self.height//10
    ScrollView:
      scroll_y: 0
      scroll_x: 1
      BoxLayout:
        id: story
        size_hint_y: None
        height: self.minimum_height
        orientation: "vertical"

    Label:
      id: entry
      text: '0'
      size_hint_y: 0.35
      text_size: self.width, self.height
      font_size: self.height
      max_lines:1
      shorten: True
      shorten_from: 'left'
      halign: 'right'
      valign: 'bottom'

  GridLayout:
    canvas.before:
      Color:
        rgba: .15,.15,.17, 1
      Rectangle:
        pos: self.pos
        size: self.size
    cols: 5
    size_hint: 1, 0.655
    padding: 3
    spacing: 3
    Button:
      text: '^'
      on_press: root.add_operation(self)
    Button:
      text: 'mod'
      on_press: root.add_operation(self)
    CustomButton:
      functions: ['φ(x)','F(N)']
      on_long_press: root.switch_key(self)
      on_press: root.add_number(self)
    Button:
      text: 'x-¹'
      on_press: root.add_operation(self)
    Button:
      text: '<-'
      on_press: root.delete(self)

    Button:
      text: '×'
      on_press: root.add_operation(self)
    Button:
      text: '7'
      on_press: root.add_number(self)
    Button:
      text: '8'
      on_press: root.add_number(self)
    Button:
      text: '9'
      on_press: root.add_number(self)
    Button:
      text: 'C'
      on_press: root.clean(self)

    Button:
      text: '÷'
      on_press: root.add_operation(self)
    Button:
      text: '4'
      on_press: root.add_number(self)
    Button:
      text: '5'
      on_press: root.add_number(self)
    Button:
      text: '6'
      on_press: root.add_number(self)
    CustomButton:
      functions: ['НОД','НОК']
      on_long_press: root.switch_key(self)
      on_press: root.add_number(self)

    Button:
      text: '+'
      on_press: root.add_operation(self)
    Button:
      text: '1'
      on_press: root.add_number(self)
    Button:
      text: '2'
      on_press: root.add_number(self)
    Button:
      text: '3'
      on_press: root.add_number(self)
    Button:
      text: '( )'
      on_press: root.add_parentheses(self)

    Button:
      text: '-'
      on_press: root.add_operation(self)
    Button:
      text: ','
      on_press: root.add_operation(self)
    Button:
      text: '0'
      on_press: root.add_number(self)
    Button:
      text: '.'
      on_press: root.add_number(self)
    Button:
      text: '='
      background_down: ''
      background_color: 1, 0.2, 0.1, .9
      on_press: root.result(self)

RootWidget:
  manager:manager
  elip:elip
  canvas.before:
    Color:
      rgba: .1,.1,.13, 1
    Rectangle:
      pos: self.pos
      size: self.size
  orientation: 'vertical'
  BoxLayout:
    size_hint:1,0.07
    spacing: 10
    padding: [self.width//30,self.height//20,self.width//30,0]
    CustomToggleButton:
      text: root.screens[0]
      state:'down'
      on_press: root.switch_screen(self)
    CustomToggleButton:
      text: root.screens[1]
      on_press:
        root.elip.dropdown.dismiss()
        root.switch_screen(self)
  ScreenManager:
    id: manager
    Screen:
      name: root.screens[0]
      Usual:
    Screen:
      name: root.screens[1]
      Elliptic:
        id:elip

<CustomButton>:
  text: self.functions[self.cur_func]
  long_press_time: 0.25
  canvas.before:
    Color:
      rgba: root.funcs_colors[root.cur_func]
    Rectangle:
      pos: self.pos
      size: (self.size[0],self.size[1]//10)

<Button>:
  background_normal: ''
  background_color: 1, 1, 1, .05
  font_size: self.height//3

<CustomToggleButton>:
  group:'calculators'
  allow_no_selection:False
  font_size: self.height//2.2
  background_normal: ''
  background_down: ''
  background_color: .1,.1,.13, 0#1, 1, 1,.1
  canvas.after:
    Color:
      rgba: root.can_color
    Rectangle:
      pos: self.pos
      size: (self.size[0],self.size[1]//15)
